package test.liuzehua.rabbitmqdemo.workqueue;import com.rabbitmq.client.*;import test.liuzehua.rabbitmqdemo.utils.ConnectionFactoryUtil;import java.io.IOException;import java.util.concurrent.TimeUnit;/** * @author liuzehua * 2020/6/6 **/public class Consumer2 {    public static void main(String[] args) throws IOException {        Connection connection = ConnectionFactoryUtil.getConnection();        Channel channel = connection.createChannel();//        channel.queueDeclare("work",true,false,false,null);        //每次消费的个数        channel.basicQos(1);        //关闭自动确认        channel.basicConsume("work",false,new DefaultConsumer(channel){            @Override            public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {                //手动延迟  展示能者多劳                try {                    TimeUnit.SECONDS.sleep(2);                } catch (InterruptedException e) {                    e.printStackTrace();                }                System.out.println(" consumer2 ==========="+new String(body,"UTF-8"));                // 确认的是哪个消息    是否开启多条消息确认                channel.basicAck(envelope.getDeliveryTag(),false);            }        });    }}