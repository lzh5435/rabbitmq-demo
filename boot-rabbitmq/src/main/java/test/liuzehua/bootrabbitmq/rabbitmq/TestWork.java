package test.liuzehua.bootrabbitmq.rabbitmq;import com.rabbitmq.client.Channel;import org.springframework.amqp.core.Message;import org.springframework.amqp.rabbit.annotation.Queue;import org.springframework.amqp.rabbit.annotation.RabbitHandler;import org.springframework.amqp.rabbit.annotation.RabbitListener;import org.springframework.stereotype.Component;import java.io.IOException;import java.util.concurrent.TimeUnit;/** * @author liuzehua * 2020/6/7 **/@Componentpublic class TestWork {    @RabbitListener(queuesToDeclare = @Queue("work"))    @RabbitHandler    void receive1(String body, Channel channel, Message message) throws IOException, InterruptedException {        System.out.println("consumer11 收到的消息" +  body);        try {            TimeUnit.SECONDS.sleep(2);            channel.basicAck(message.getMessageProperties().getDeliveryTag(),false);        } catch (IOException e) {            //失败后消息被确认            channel.basicReject(message.getMessageProperties().getDeliveryTag(), false);            e.printStackTrace();        }    }    @RabbitListener(queuesToDeclare = @Queue("work"))    @RabbitHandler    void receive2(String body, Channel channel, Message message) throws IOException {        System.err.println("consumer2222222 收到的消息" + body);        channel.basicAck(message.getMessageProperties().getDeliveryTag(),false);    }}